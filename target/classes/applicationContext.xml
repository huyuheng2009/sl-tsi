<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="
		http://www.springframework.org/schema/beans			http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/context		http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop			http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/tx			http://www.springframework.org/schema/tx/spring-tx-3.2.xsd"	
	   default-lazy-init="false">
	
 	<context:component-scan base-package="com.yogapay.couriertsi.services"> </context:component-scan> 
	
	<!-- 导入数据库配置 -->
	<!--<context:property-placeholder location="classpath:config/jdbc.properties" />-->
	<import resource="classpath:spring/db.xml" />
	<import resource="classpath:spring/quartz.xml" />
	<aop:aspectj-autoproxy proxy-target-class="true"/>
    
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configurationProperties">
			<props>
				<prop key="logImpl">LOG4J</prop>
				<prop key="cacheEnabled">false</prop>
				<prop key="lazyLoadingEnabled">false</prop>
				<prop key="useColumnLabel">true</prop>
				<prop key="mapUnderscoreToCamelCase">true</prop>
			</props>
		</property>
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:mybatis_mapper/*.xml" />
	</bean>

	<!-- ================================事务相关控制================================================= -->
	<bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>


	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="delete*" propagation="REQUIRED" read-only="false"		   rollback-for="java.lang.Exception" no-rollback-for="java.lang.RuntimeException" />
			<tx:method name="insert*" propagation="REQUIRED" read-only="false"		   rollback-for="java.lang.Exception" />
			<tx:method name="update*" propagation="REQUIRED" read-only="false"		   rollback-for="java.lang.Exception" />
			<tx:method name="save*" propagation="REQUIRED" read-only="false"  rollback-for="java.lang.Exception" />		
			<tx:method name="take" propagation="REQUIRED" read-only="false"  rollback-for="java.lang.Exception" />
			<tx:method name="yxtake" propagation="REQUIRED" read-only="false"  rollback-for="java.lang.Exception" />
			<tx:method name="read*" propagation="REQUIRED" read-only="true" />
			<tx:method name="find*" propagation="SUPPORTS" />
			<tx:method name="get*" propagation="SUPPORTS" />
			<tx:method name="select*" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice>
	

	<!-- 	 把事务控制在Service层 --> 
	<aop:config>
		<aop:pointcut id="pc" expression="execution(public * com.yogapay.couriertsi.services.*.*(..))" />
		<aop:advisor pointcut-ref="pc" advice-ref="txAdvice" />
	</aop:config>
    
	<tx:annotation-driven transaction-manager="transactionManager"/>   

	<beans profile="development">
		<bean id="config" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
			<property name="locations">
				<array>
					<value>classpath:config/config.properties</value>
					<value>classpath:config/config_dev.properties</value>
				</array>
			</property>
		</bean>
	</beans>
	<beans profile="default">
		<bean id="config" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
			<property name="locations">
				<array>
					<value>classpath:config/config.properties</value>
					<value>file:config_pro.properties</value>
				</array>
			</property>
		</bean>
	</beans>
    
   
</beans>