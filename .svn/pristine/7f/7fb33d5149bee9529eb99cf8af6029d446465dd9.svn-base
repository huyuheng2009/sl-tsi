package com.yogapay.couriertsi.services;

import java.io.IOException;

import javax.annotation.Resource;






import org.springframework.stereotype.Service;

import com.baidu.yun.core.log.YunLogEvent;
import com.baidu.yun.core.log.YunLogHandler;
import com.baidu.yun.push.auth.PushKeyPair;
import com.baidu.yun.push.client.BaiduPushClient;
import com.baidu.yun.push.constants.BaiduPushConstants;
import com.baidu.yun.push.exception.PushClientException;
import com.baidu.yun.push.exception.PushServerException;
import com.baidu.yun.push.model.PushMsgToTagRequest;
import com.baidu.yun.push.model.PushMsgToTagResponse;
import com.yogapay.couriertsi.api.ConfigInfo;
import com.yogapay.couriertsi.domain.PushMsg;
import com.yogapay.couriertsi.utils.JsonUtil;

@Service
public class BaiduYunPushService{
	
	@Resource private ConfigInfo configInfo ;
	private BaiduPushClient client ;

	public BaiduYunPushService() throws IOException {

		 String apiKey = configInfo.getBaidu_push_apiKey() ;
		 String secretKey = configInfo.getBaidu_push_secretKey() ;
		 PushKeyPair pair  = new PushKeyPair(apiKey, secretKey);
		// 2. 创建BaiduPushClient，访问SDK接口
		 client = new BaiduPushClient(pair,BaiduPushConstants.CHANNEL_REST_URL);

		// 3. 注册YunLogHandler，获取本次请求的交互信息
		client.setChannelLogHandler(new YunLogHandler() {
			@Override
			public void onHandle(YunLogEvent event) {
				System.out.println(event.getMessage());
			}
		});
	
	}

	public String pushMsgToTag(String tag,PushMsg msg,int deviceType,int deployStatus) throws PushClientException, PushServerException {
		 PushMsgToTagResponse response  = null  ;
		 try {
		        // 4. 设置请求参数，创建请求实例
		            PushMsgToTagRequest request = new PushMsgToTagRequest().
                        addTagName(tag).
		                addMsgExpires(new Integer(3600)).   //设置消息的有效时间,单位秒,默认3600*5.
		                addMessageType(1) ;           //设置消息类型,0表示透传消息,1表示通知,默认为0.
		             if(deviceType==3||deviceType==0){
		            	 request.addMessage(JsonUtil.toJson(msg.convertAndroid())).
			             addDeviceType(3);      //设置设备类型，deviceType => 1 for web, 2 for pc, 
		            	 response = client.pushMsgToTag(request) ;
		             }    
		            if(deviceType==4||deviceType==0){
		            	 request.addMessage(JsonUtil.toJson(msg.convertIos())).
			             addDeviceType(4);      //设置设备类型，deviceType => 1 for web, 2 for pc, 
		            	 request.addDeployStatus(deployStatus) ;
		            	 response = client.pushMsgToTag(request) ;
					}    
		        // Http请求返回值解析
		            System.out.println("msgId: " + response.getMsgId() + ",sendTime: " + response.getSendTime());
		        } catch (PushClientException e) {
		            //ERROROPTTYPE 用于设置异常的处理方式 -- 抛出异常和捕获异常,
		            //'true' 表示抛出, 'false' 表示捕获。
		            if (BaiduPushConstants.ERROROPTTYPE) { 
		                throw e;
		            } else {
		                e.printStackTrace();
		            }
		        } catch (PushServerException e) {
		            if (BaiduPushConstants.ERROROPTTYPE) {
		                throw e;
		            } else {
		                System.out.println(String.format("requestId: %d, errorCode: %d, errorMsg: %s",e.getRequestId(), e.getErrorCode(), e.getErrorMsg()));
		            }
		        }
		 if (response!=null) {
			 return response.getMsgId() ;
		}else {
			return "0" ;
		}
	
}


	

}
